/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.soict.hust.k57.mmdb.view;

import edu.soict.hust.k57.mmdb.controller.AbstractController;
import edu.soict.hust.k57.mmdb.controller.ResultController;
import edu.soict.hust.k57.mmdb.model.ResultModel;
import java.awt.Image;
import java.beans.PropertyChangeEvent;
import javax.swing.ImageIcon;

/**
 *
 * @author thinhnt
 */
public class ImageView extends AbstractView {

    /**
     * Creates new form ImageView
     */
    public ImageView() {
        initComponents();
    }
    
    public void setImage(ImageIcon img) {
        img = prepareImgSize(img);
        imageLabel.setIcon(img);
    }

     public void setImageName(String name) {
        imgNameLabel.setText(name);
    }

    private ImageIcon prepareImgSize(ImageIcon img) {
        Image image = img.getImage();
        int w = img.getIconWidth();
        int h = img.getIconHeight();
        image = image.getScaledInstance(w * 355 / h, 355, Image.SCALE_SMOOTH);
        return new ImageIcon(image);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imageLabel = new javax.swing.JLabel();
        prevButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        imgNameLabel = new javax.swing.JLabel();

        imageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        prevButton.setText("Previous");
        prevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtonActionPerformed(evt);
            }
        });

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        imgNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imgNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imageLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(prevButton, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {nextButton, prevButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(imgNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prevButton)
                    .addComponent(nextButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        for (AbstractController controller : controllers) {
            if (controller instanceof ResultController){
                ((ResultController) controller).onclickNextButton();
            }
        }
    }//GEN-LAST:event_nextButtonActionPerformed

    private void prevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtonActionPerformed
        // TODO add your handling code here:
        for (AbstractController controller : controllers) {
            if (controller instanceof ResultController){
                ((ResultController) controller).onclickPrevtButton();
            }
        }
    }//GEN-LAST:event_prevButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel imgNameLabel;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton prevButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateView(PropertyChangeEvent evt) {
        if (evt.getPropertyName().endsWith(ResultModel.SELECTED_IMAGE_PROPERTY_NAME)){
            ResultModel model = (ResultModel) evt.getNewValue();
            setImageName(model.getSelectedImageName());
            setImage(model.getSelectedImageIcon());
            if (model.getNewSelectedIndex() == 0){
                prevButton.setEnabled(false);
                nextButton.setEnabled(true);
            }else if (model.getNewSelectedIndex() == 99){
                nextButton.setEnabled(false);
                prevButton.setEnabled(true);
            }else{
                prevButton.setEnabled(true);
                nextButton.setEnabled(true);
            }
        }
    }
}
